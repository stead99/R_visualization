version
plot(c(1:10), c(1:10))
library(clusterProfiler)
library("pathview")
setwd('/Users/stead/Documents/SourceTree/gitbook/R_visualization/images/part10')
rt_FC_P <- read.table(file = '/Users/stead/Documents/SourceTree/gitbook/R_visualization/data/P_FC.txt',
header = TRUE, row.names = 1, stringsAsFactors = FALSE)
#准备KEGG需要的数据
eg = bitr(row.names(rt_FC_P), fromType="SYMBOL", toType="ENTREZID", OrgDb="org.Hs.eg.db")
gene_list <- rt_FC_P$logFC[match(eg$SYMBOL, row.names(rt_FC_P), nomatch = 0)]
names(gene_list) <- eg$ENTREZID
gene_list <- gene_list[order(gene_list, decreasing = TRUE)]
gene <- names(gene_list)[abs(gene_list) > 1]
kk <- enrichKEGG(gene = gene, organism = 'hsa', pvalueCutoff = 0.05)
head(kk)
kk2 <- gseKEGG(geneList = gene_list, organism = 'hsa', pvalueCutoff = 0.05, verbose = FALSE)
head(kk2)
svg(filename = 'KK1.svg', width = 4, height = 4)
barplot(kk, showCategory = 8)
dev.off()
barplot(kk, showCategory = 8)
ggsave(filename = "testing.svg")
?ggsave
library(cowplot)
ggsave(filename = "testing.svg")
barplot(kk, showCategory = 8)
ggsave(filename = "testing.svg")
libarry(cairo)
library(cairo)
library(Cairo)
.libPaths()
.libPaths(c( .libPaths(), '/Users/stead/anaconda/lib/R/library'))
svg(filename = 'KK1.svg', width = 4, height = 4)
barplot(kk, showCategory = 8)
dev.off()
?dotplot
?emapplot
svg(file = 'GO3.svg', width = 4, height = 4)
emapplot(ego)
dev.off()
svg(filename = 'KK2.svg', width = 4, height = 4)
dotplot(kk2)
dev.off()
